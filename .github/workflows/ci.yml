name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test-backend:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: vessel_emissions_test
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
        cache-dependency-path: backend/package-lock.json
    
    - name: Install dependencies
      run: |
        cd backend
        npm ci --legacy-peer-deps
        npm list jest
    
    - name: Verify Jest configuration
      run: |
        cd backend
        test -f jest.config.js && echo "Jest config file exists"
        grep -q '"test": "jest"' package.json && echo "Jest test script found"
    
    - name: Run tests
      env:
        DATABASE_URL: postgresql://postgres:postgres@localhost:5432/vessel_emissions_test
      run: |
        cd backend
        npm test

  test-frontend:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
        cache-dependency-path: frontend/package-lock.json
    
    - name: Install dependencies
      run: |
        cd frontend
        npm ci --legacy-peer-deps
        npm list jest
    
    - name: Verify Jest configuration
      run: |
        cd frontend
        test -f jest.config.js && echo "Jest config file exists"
        grep -q '"test": "jest"' package.json && echo "Jest test script found"
    
    - name: Run tests
      run: |
        cd frontend
        npm test

  lint:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
        cache-dependency-path: |
          backend/package-lock.json
          frontend/package-lock.json
    
    - name: Install dependencies
      run: |
        cd backend && npm ci --legacy-peer-deps
        cd ../frontend && npm ci --legacy-peer-deps
    
    - name: Run ESLint
      run: |
        cd backend && npm run lint
        cd ../frontend && npm run lint 